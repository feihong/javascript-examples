import 'babel-polyfill'       // this allows use of generator functions
import wu from 'wu'


function print(...args) {
  let text = args.map((x) => {
    if (x instanceof Array || x instanceof Object) {
      return JSON.stringify(x, null, 2)
    } else {
      return x.toString()
    }
  }).join(' ')
  let para = document.createElement('p')
  para.textContent = text
  document.getElementById('output').appendChild(para)
}

function sum(iterable) {
  return wu(iterable).reduce((x, y) => x + y)
}

print(sum([1, 2, 3]))         // 6
let genFunc = (function *() {
  yield 4; yield 5; yield 6;
})
print(sum(genFunc()))         // 15

let map = new Map()
map.set('group', [
  {name: 'burger', price: 12},
  {name: 'pizza', price: 18.5},
])
map.set('tommy', [
  {name: 'manhattan', price: 9.31},
  {name: 'martini', price: 6.47},
])

function sumAllPricesInMap(map) {
  let items = wu(map.values()).flatten()
  return items.reduce((x, y) => x + y.price, 0)
}
print(sumAllPricesInMap(map))   // 46.28
